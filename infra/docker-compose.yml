version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  web:
    build: ../backend
    command: sh -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn --workers=4 --reload --max-requests=1000 foodgram.wsgi -b 0.0.0.0:8000"
    volumes:
      - ../backend:/code
      - static_volume:/app/static
    expose:
      - 8000
    env_file:
      - .env
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:8888"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  frontend:
    image: nanotest676/foodgram_frontend:latest
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - wed

  nginx:
    build: .
    ports:
      - "80:8888"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/code/static
      - media_volume:/code/media
    depends_on:
      - web
      - frontend

volumes:
  postgres_data:
  static_volume:
  media_volume:
  pgadmin-data:
